{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","sortGoods","a","b","ALPHABETICALLY","localeCompare","length","goods","sort","reverse","className","type","onClick","LENGTH","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,kDAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,mCAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAAY,SAACC,EAAWC,GAC5B,OAAIN,IAAaL,EAASI,KACjB,EAGFC,IAAaL,EAASY,eACzBF,EAAEG,cAAcF,GAChBD,EAAEI,OAASH,EAAEG,QAGbC,EAAkBR,EAEpB,UAAIN,GAAiBe,KAAKP,GAAWQ,UADrC,UAAIhB,GAAiBe,KAAKP,GAG9B,OACE,sBAAKS,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBb,IAAaL,EAASY,gBAAkB,YACrEQ,QAAS,kBAAMd,EAAYN,EAASY,iBAHtC,iCAQA,wBACEO,KAAK,SACLD,UAAS,4BAAuBb,IAAaL,EAASqB,QAAU,YAChED,QAAS,kBAAMd,EAAYN,EAASqB,SAHtC,4BAQA,wBACEF,KAAK,SACLD,UAAS,6BAAwBX,GAAc,YAC/Ca,QAAS,kBAAMZ,GAAeD,IAHhC,sBAQEA,GAAcF,IAAaL,EAASI,OACpC,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPZ,GAAc,GACdF,EAAYN,EAASI,OALzB,sBAaJ,6BACE,6BACGW,EAAMO,KAAI,SAAAC,GAAI,OAAI,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cChFtCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.eddc0738.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABETICALLY,\n  LENGTH,\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const sortGoods = (a: string, b:string):number => {\n    if (sortType === SortType.NONE) {\n      return 0;\n    }\n\n    return sortType === SortType.ALPHABETICALLY\n      ? a.localeCompare(b)\n      : a.length - b.length;\n  };\n\n  const goods:string[] = !isReversed\n    ? [...goodsFromServer].sort(sortGoods)\n    : [...goodsFromServer].sort(sortGoods).reverse();\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABETICALLY && 'is-light'}`}\n          onClick={() => setSortType(SortType.ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed && 'is-light'}`}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReversed(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => <li key={good} data-cy=\"Good\">{good}</li>)}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}